AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60
    Tracing: Active
  Api:
    OpenApiVersion: 3.0.2
    TracingEnabled: True

Resources:

  ImageProcessLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: 'ImageProcessLambdaRole'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole'
        - 'arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess'
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaRole'
      Policies:
        - PolicyName: "ImageProcessS3AccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:*"
                Resource: !GetAtt ImageS3Bucket.Arn

  ImageS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "sam-image-processing-bucket"
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True

  SAMImageProcessApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: sam-image-processing
      StageName: v1
      BinaryMediaTypes:
        - image/jpeg
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  GetImageProcessFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt ImageProcessLambdaRole.Arn
      CodeUri: get_image_process/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        GetImage:
          Type: Api
          Properties:
            RestApiId: !Ref SAMImageProcessApi
            Path: /image
            Method: get

  PostImageProcessFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt ImageProcessLambdaRole.Arn
      CodeUri: post_image_process/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        GetImage:
          Type: Api
          Properties:
            RestApiId: !Ref SAMImageProcessApi
            Path: /image
            Method: post